{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c3845476_6b73b880",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1002303
      },
      "writtenOn": "2025-09-22T20:42:15Z",
      "side": 1,
      "message": "This is still a large change. \n\nI see the Modbus Message isn\u0027t unit tested and could benefit from that. This diff would be easier to read if you pulled that out into another diff. \n\nI could also see the classes that derive from that coming in another diff",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90cea8ac_fe1bf4ca",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-09-22T22:22:27Z",
      "side": 1,
      "message": "I am creating diffs based on functional units, hence i have broken the patches at that level as it becomes easier to understand how the complete unit will come together. Also, i have written my unit testing in terms of consumption model, as no one is directly going to use the Modbus Message but it will be used via the library APIs, hence i have written my unit testing for the library APIs and not the internal classes as testing library APIs will automatically test the internal classes. Having said that this doesn\u0027t mean that we cannot add unit testing for individual classes but if needed we can always add that as a separate patch.",
      "parentUuid": "c3845476_6b73b880",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1609970b_13929953",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1002303
      },
      "writtenOn": "2025-09-23T05:41:44Z",
      "side": 1,
      "message": "For testing, IMO, best practices say otherwise. I\u0027m not really sure what you mean by \"testing in terms of consumption model\" but it sounds like you\u0027ll hit the same pitfalls of integration tests.  \n\nIt seems strange to think that \"no one is directly going to use the Modbus Message\". That shouldn\u0027t be the reason why we don\u0027t write tests. Things will evolve with time and waiting until we need tests because things are so buggy or painful to develop seems backwards to me",
      "parentUuid": "90cea8ac_fe1bf4ca",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "468581db_61b276c9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-09-23T09:27:18Z",
      "side": 1,
      "message": "\u003e For testing, IMO, best practices say otherwise. I\u0027m not really sure what you mean by \"testing in terms of consumption model\" but it sounds like you\u0027ll hit the same pitfalls of integration tests.  \n\u003e \n\u003e It seems strange to think that \"no one is directly going to use the Modbus Message\". That shouldn\u0027t be the reason why we don\u0027t write tests. Things will evolve with time and waiting until we need tests because things are so buggy or painful to develop seems backwards to me\n\nLooks like there is some misunderstanding. Both request and responses are inherited from Message class. I already have unit testing around message marshaling and validating to make sure the marshaled message is correct. There were some fields which were not being validated which i have added in my latest commit. Also, added test for failure scenario. Please check that.",
      "parentUuid": "1609970b_13929953",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7fe98e0b_46f4ecb3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-10-03T01:31:54Z",
      "side": 1,
      "message": "I have broken this patch further and added another patch https://gerrit.openbmc.org/c/openbmc/phosphor-modbus/+/84203 with more unit testing. Thanks",
      "parentUuid": "468581db_61b276c9",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e038eb85_cbfc8128",
        "filename": "rtu/modbus/modbus.cpp",
        "patchSetId": 11
      },
      "lineNbr": 22,
      "author": {
        "id": 1002303
      },
      "writtenOn": "2025-09-22T20:42:15Z",
      "side": 1,
      "message": "nit: you return success/failure, not the parity settings. Naming this applyParitySettings or configureParity seems better",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f3681038_5f4f06e4",
        "filename": "rtu/modbus/modbus.cpp",
        "patchSetId": 11
      },
      "lineNbr": 22,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-09-22T22:22:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e038eb85_cbfc8128",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2adb3469_3dcf4777",
        "filename": "rtu/modbus/modbus.cpp",
        "patchSetId": 11
      },
      "lineNbr": 153,
      "author": {
        "id": 1002303
      },
      "writtenOn": "2025-09-22T20:42:15Z",
      "side": 1,
      "message": "Why do we flush before? don\u0027t we want to do this after we finish the write?",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a539f9c9_d6363149",
        "filename": "rtu/modbus/modbus.cpp",
        "patchSetId": 11
      },
      "lineNbr": 153,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-09-22T22:22:27Z",
      "side": 1,
      "message": "I am doing so to flush any remnant data from old operation to start a clean new operation.",
      "parentUuid": "2adb3469_3dcf4777",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb951fec_53086dd0",
        "filename": "rtu/modbus/modbus.cpp",
        "patchSetId": 11
      },
      "lineNbr": 153,
      "author": {
        "id": 1002303
      },
      "writtenOn": "2025-09-23T05:41:44Z",
      "side": 1,
      "message": "If there was data left to be flushed, wouldn\u0027t that mess up the write command your are about to make?",
      "parentUuid": "a539f9c9_d6363149",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51d17610_7c96e8e1",
        "filename": "rtu/modbus/modbus.cpp",
        "patchSetId": 11
      },
      "lineNbr": 153,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-09-23T09:27:18Z",
      "side": 1,
      "message": "I think when i said flush in my previous response, it created some misunderstanding for you.\n\nThe call tcflush(fd, TCIOFLUSH) discards all unread input data and all un-transmitted output data from the terminal device associated with the file descriptor fd.\n\nSo, any new operation has a fresh start, which will start in next line with write operation of next command.",
      "parentUuid": "bb951fec_53086dd0",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ce94e59_f87bc2ea",
        "filename": "rtu/modbus/modbus_commands.cpp",
        "patchSetId": 11
      },
      "lineNbr": 13,
      "author": {
        "id": 1002303
      },
      "writtenOn": "2025-09-22T20:42:15Z",
      "side": 1,
      "message": "Do we need both deviceAddress and address? Can we just use the message address?",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f3a7a9e_71315acc",
        "filename": "rtu/modbus/modbus_commands.cpp",
        "patchSetId": 11
      },
      "lineNbr": 13,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-09-22T22:22:27Z",
      "side": 1,
      "message": "I don\u0027t see a use for address var at the moment, so i have dropped it.",
      "parentUuid": "8ce94e59_f87bc2ea",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91092fbe_30ba7541",
        "filename": "rtu/modbus/modbus_commands.cpp",
        "patchSetId": 11
      },
      "lineNbr": 13,
      "author": {
        "id": 1002303
      },
      "writtenOn": "2025-09-23T05:41:44Z",
      "side": 1,
      "message": "Are you sure? \n\nFrom my understanding, this should have changed your raw message first byte to always be 0. Is that correct? Doesn\u0027t this change the CRC as well?\n\nI\u0027ll reiterate that some tests here would be useful since it\u0027s pretty unclear to me what the correct value is supposed to look like. And how do we make sure someone doesn\u0027t accidentally change things in the future?",
      "parentUuid": "8f3a7a9e_71315acc",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99cd0d8b_7f0d7ec0",
        "filename": "rtu/modbus/modbus_commands.cpp",
        "patchSetId": 11
      },
      "lineNbr": 13,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-09-23T09:27:18Z",
      "side": 1,
      "message": "This address var was only supposed to be used as a reference to the raw[0] for easy use. The  device address is already being encoded/set into message as part of encode API. Thats why i said we don\u0027t need this assignment. I have added a check for deviceAddress verification in my UT and it passes.",
      "parentUuid": "91092fbe_30ba7541",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac7004a9_d18b91ce",
        "filename": "rtu/modbus/modbus_commands.hpp",
        "patchSetId": 11
      },
      "lineNbr": 30,
      "author": {
        "id": 1002303
      },
      "writtenOn": "2025-09-22T20:42:15Z",
      "side": 1,
      "message": "Can all the ints here be `const`?",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d43690b_9afe28dc",
        "filename": "rtu/modbus/modbus_commands.hpp",
        "patchSetId": 11
      },
      "lineNbr": 30,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-09-22T22:22:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ac7004a9_d18b91ce",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2567e65a_b4e2fd99",
        "filename": "rtu/modbus/modbus_commands.hpp",
        "patchSetId": 11
      },
      "lineNbr": 55,
      "author": {
        "id": 1002303
      },
      "writtenOn": "2025-09-22T20:42:15Z",
      "side": 1,
      "message": "I see a constructor use this but it\u0027s hard to tell why we need it. Can you explain that?",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "92255f61_c8fd151b",
        "filename": "rtu/modbus/modbus_commands.hpp",
        "patchSetId": 11
      },
      "lineNbr": 55,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-09-22T22:22:27Z",
      "side": 1,
      "message": "The returned response is stored in the registers vector. I have added description above the class var definition.",
      "parentUuid": "2567e65a_b4e2fd99",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab320bd6_7fe7bc71",
        "filename": "rtu/modbus/modbus_message.cpp",
        "patchSetId": 11
      },
      "lineNbr": 22,
      "author": {
        "id": 1002303
      },
      "writtenOn": "2025-09-22T20:42:15Z",
      "side": 1,
      "message": "You don\u0027t use `raw` in this method. Why are we checking the size? Did you forget to add the values to `raw`?",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f2d08be_d0c0b7a0",
        "filename": "rtu/modbus/modbus_message.cpp",
        "patchSetId": 11
      },
      "lineNbr": 22,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-09-22T22:22:27Z",
      "side": 1,
      "message": "raw is maxADUSize buffer which is used to marshall the modbus message for sending to a device. Here while marshalling we are checking if we are still within the message bounds otherwise throwing an overflow_error.\n\nRaw is getting used in uint8_t function on line#10 as unit16_t does 2 (x uint8_t) pushes to *this as function on line10 is the operator \u003c\u003c overloaded function for uint8_t.",
      "parentUuid": "ab320bd6_7fe7bc71",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80d12529_a3112311",
        "filename": "rtu/modbus/modbus_message.cpp",
        "patchSetId": 11
      },
      "lineNbr": 22,
      "author": {
        "id": 1002303
      },
      "writtenOn": "2025-09-23T05:41:44Z",
      "side": 1,
      "message": "Ahh, this feels a mix of clever and confusing. But I\u0027m not sure what the style rules are for this. \n\nAll the size checks are redundant since you\u0027ll eventually hit the unit8 case that will make sure we have enough space",
      "parentUuid": "2f2d08be_d0c0b7a0",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd7270ff_c1ad2fdf",
        "filename": "rtu/modbus/modbus_message.cpp",
        "patchSetId": 11
      },
      "lineNbr": 22,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-09-23T09:27:18Z",
      "side": 1,
      "message": "Sure, will drop the redundant checks.",
      "parentUuid": "80d12529_a3112311",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4cc2454b_cb1fa94f",
        "filename": "rtu/modbus/modbus_message.cpp",
        "patchSetId": 11
      },
      "lineNbr": 27,
      "author": {
        "id": 1002303
      },
      "writtenOn": "2025-09-22T20:42:15Z",
      "side": 1,
      "message": "Will we eventually support little endian?",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf52dc48_06cc4e2d",
        "filename": "rtu/modbus/modbus_message.cpp",
        "patchSetId": 11
      },
      "lineNbr": 27,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-09-22T22:22:27Z",
      "side": 1,
      "message": "No, as per modbus spec its only big endian.",
      "parentUuid": "4cc2454b_cb1fa94f",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2e2a13c_bebb29d4",
        "filename": "rtu/modbus/modbus_message.cpp",
        "patchSetId": 11
      },
      "lineNbr": 34,
      "author": {
        "id": 1002303
      },
      "writtenOn": "2025-09-22T20:42:15Z",
      "side": 1,
      "message": "Similar comment as above. Why do we need `raw`?",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8e2d006_9099f40b",
        "filename": "rtu/modbus/modbus_message.cpp",
        "patchSetId": 11
      },
      "lineNbr": 34,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-09-22T22:22:27Z",
      "side": 1,
      "message": "Please see my response in same comment.",
      "parentUuid": "b2e2a13c_bebb29d4",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f09b1ee5_81e9926f",
        "filename": "rtu/modbus/modbus_message.cpp",
        "patchSetId": 11
      },
      "lineNbr": 48,
      "author": {
        "id": 1002303
      },
      "writtenOn": "2025-09-22T20:42:15Z",
      "side": 1,
      "message": "Can we make these errors messages a little better so it\u0027s easier to tell what\u0027s happening when they fire?",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "78ff7d67_5a3eb54e",
        "filename": "rtu/modbus/modbus_message.cpp",
        "patchSetId": 11
      },
      "lineNbr": 48,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-09-22T22:22:27Z",
      "side": 1,
      "message": "The exception will have the stack trace along with the specific exception, so it will be evident from that we were inside which decode function when this specific exception fired, so i don\u0027t think we need to duplicate that information again inside the message.",
      "parentUuid": "f09b1ee5_81e9926f",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "549abb35_ae0a3a42",
        "filename": "rtu/modbus/modbus_message.cpp",
        "patchSetId": 11
      },
      "lineNbr": 48,
      "author": {
        "id": 1002303
      },
      "writtenOn": "2025-09-23T05:41:44Z",
      "side": 1,
      "message": "I disagree. These lines can shift a bit with future modifications. Why not spend a minute now to disambiguate the errors instead of making our lives more painful when we are debugging a live system and trying to figure out what version of the code we have running to figure out which spot we ended up in?",
      "parentUuid": "78ff7d67_5a3eb54e",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "434a491a_683284d9",
        "filename": "rtu/modbus/modbus_message.cpp",
        "patchSetId": 11
      },
      "lineNbr": 48,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-09-23T09:27:18Z",
      "side": 1,
      "message": "\u003e I disagree. These lines can shift a bit with future modifications. Why not spend a minute now to disambiguate the errors instead of making our lives more painful when we are debugging a live system and trying to figure out what version of the code we have running to figure out which spot we ended up in?\n\nIn lastest patch i have dropped the throw from other 2 APIs and only left it in decode of uint8_t as per your comment https://gerrit.openbmc.org/c/openbmc/phosphor-modbus/+/81497/comment/ab320bd6_7fe7bc71/. So, i don\u0027t think we don\u0027t need any specific message as there is only one decode and encode throw. If you still think otherwise, please feel free to suggest here if you have any specific message in mind and we can discuss on that.",
      "parentUuid": "549abb35_ae0a3a42",
      "revId": "cc3c40b8acaa4fe98f96646997c6088b852205af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}